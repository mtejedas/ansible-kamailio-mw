# tasks file for Debian flavour

- name: Add kamailio Repo Signing key
  apt_key:
    url: {{ kamailio_repo }}/{{ kamailio_repo_keyname }}
    state: present

- name: Add kamailio apt repository (Debian 8/Jessie)
  apt_repository:
    repo: deb {{ kamailio_repo }}{{ kamailio_version }} {{ debian_version }} main
    state: present
    filename: 'kamailio'

- name: Add kamailio apt source repository (Debian 8/Jessie)
  apt_repository:
    repo: deb-src {{ kamailio_repo }}{{ kamailio_version }} {{ debian_version }} main
    state: present
    filename: 'kamailio'

- name: Update APT Cache
  apt: update_cache=yes

- name: Ensure tzdata is installed
  apt: name=tzdata state=latest
  when: ntp_install

- name: Install tool-packages
  apt: state=present pkg={{ item }}
  with_items:
  - tcpdump
  - iftop
  - htop
  - python-pip

### source of systemd-timesynd : https://github.com/debops/ansible-ntp
- name: Ensure that alternative daemons/programs are not installed
  apt:
    name: '{{ item }}'
    state: absent
    purge: True
  with_flattened:
    - ntpdate
    - ntp
    - openntpd
  when: ntp_install

- name: Manage systemd-timesyncd state
  service:
    name: 'systemd-timesyncd'
    state: started
    enabled: True
  when: ntp_install

# Configure systemd-timesyncd
- name: Include systemd-timesyncd configuration
  include_tasks: systemd-timesyncd.yml
  when: ntp_install

- name: Timezone configuration
  include_tasks: timezone.yml
  when: (ntp_timezone|d() and ntp_install)

# Install unbound
- name: Include unbound installation / configuration
  include_tasks: unbound.yml
  when: unbound_install

# Install kamailio
- name: Install kamailio
  apt: name={{ item }} state=latest
  with_items: "{{ kamailio_packages }}"

- name: Copy kamailio configuration files.
  template:
    src: "{{ kamailio_config_template_dir }}/{{ item }}.j2"
    dest: "{{ kamailio_conf_dir }}/{{ item }}"
    backup: yes
  with_items: "{{ kamailio_config_files }}"
  notify: Restart kamailio
  when: kamailio_install_conf

- name: Make sure kamailio is started and configure it to run at boot.
  service: name=kamailio state=started enabled=yes

- name: Inject PGSQL password
  delegate_to: "{{ kamailio_creatordb_host }}"
  template:
    src: templates/pgpass
    dest: ~/.pgpass
    mode: 0600
  when: kamailio_create_db and kamailio_db_engine == 'PGSQL'
- name: Create Kamailio DB using kamdbctl create
  delegate_to: "{{ kamailio_creatordb_host }}"
  command: kamdbctl create
  run_once: true
  notify: Restart kamailio
  when: kamailio_create_db and kamailio_db_engine == 'PGSQL'

- name: Install pexpect
  pip:
    name: pexpect
  when: kamailio_create_db and kamailio_db_engine == 'MYSQL'
- name: Create Kamailio DB using kamdbctl create
  delegate_to: "{{ kamailio_creatordb_host }}"
  expect:
    command: kamdbctl create
    responses:
      password: "{{ kamailio_db_root_pass }}"
      (?i)Install: "y"
  run_once: true
  notify: Restart kamailio
  when: kamailio_create_db and kamailio_db_engine == 'MYSQL'

# Fail2ban To be adapted
- name: install fail2ban
  apt: name=fail2ban state=latest
  when: fail2ban_install == true

- copy: src={{ fail2ban_local_jail }} dest={{ fail2ban_local_jail_file }}
  notify: Restart fail2ban
  when: fail2ban_install == true

- copy: src={{ fail2ban_kam }} dest={{ fail2ban_filter_dir }}/kamailio.conf
  notify: Restart fail2ban
  when: fail2ban_install == true

# monit

# munin
- name: check if munin-node is installed
  apt: name=munin-node state=latest
  register: apt_munin_node_check
  ignore_errors: yes
  when: munin_node_install

- include_tasks: munin-plugin.yml
  when: munin_node_install

# sngrep
- name: Sngrep installation process
  include_tasks: sngrep.yml
  when: sngrep_install

